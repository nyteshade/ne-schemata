{"version":3,"file":"slog.js","names":["_nodeStream","require","_nodeEvents","_utils","StreamTap","Writable","buffer","Buffer","alloc","eventMap","Map","tapMode","kPassthrough","processRef","WeakRef","globalThis","process","streamRef","undefined","stream","strongStreamRef","constructor","options","eventName","kWritableStreamEvents","kReadableStreamEvents","kStreamTapEvents","has","set","property","value","Object","entries","EventEmitter","prototype","String","startsWith","stdout","stderr","some","s","tapTTY","_write","chunk","encoding","callback","concat","#tapTTY","streamOwningProcess","streamToTap","on","event","TapMode","Passthrough","Mirror","kMirror","Proxy","kProxy","Symbol","toStringTag","for","exports","captureStdout","args","thisArg","captured","originalWrite","write","newArgs","push","console","log","fd","apply","substring","length","Enum","name","values","properties","enumeration","create","accessor","toString","data","Array","isArray","valueType","response","fromPrimitive","description","str","as","string","stringTag","elements","storage","realValue","key","associatedKey","associatedOpts","associatedValue","get","target","_property","receiver","includes","ownKeys","defineProperty","filter","e","applyPropertiesOf","object","baseDescriptor","configurable","enumerable","writable","subvalue","stats","isDescriptor","isValid","isAccessor","isData"],"sources":["../../src/utils/slog.js"],"sourcesContent":["import { Writable } from 'node:stream'\nimport { EventEmitter } from 'node:events'\nimport { accessor, as, data, isDescriptor } from '@nejs/basic-extensions/utils'\n\n/**\n * A StreamTap creates a reference to a stream like `stdout` or `stderr` and\n * provides some options around its logging capabilities. Given that there is\n * only one of each input and output streams per process, special casing is\n * afforded those two items.\n *\n * The stream, once tapped, can be be halted, recorded, redirected or both. It\n * can also be mirrored to multiple output locations. If the supplied stream\n * object is not equivalent to `process.stdout` or `process.stderr`, less\n * framework and conditions are put in place around its tapping.\n */\nexport class StreamTap extends Writable {\n  /**\n   * The instance of buffer that contains the content written to this stream.\n   * It is reassigned on each new write.\n   */\n  buffer = Buffer.alloc(0)\n\n  /**\n   * Event map for function references on listened to events on the tapped\n   * stream. These can be used to manually stop listening to an event handler\n   * on the tapped stream.\n   */\n  eventMap = new Map()\n\n  /**\n   * By default, all EventEmitter actions are passthrough by default. Meaning\n   * they are not applied to the tap, but actually applied to the tapped\n   * element. Other modes are Mirror and Proxy. Where Mirror mode applies all\n   * actions equally to both the Tap and Target and Proxy mode writes all\n   * changes to the Tap only but continues to read content from the Target.\n   */\n  #tapMode = StreamTap.kPassthrough\n\n  /**\n   * A {@link WeakRef} wrapper around `globalThis.process` by default. Though\n   * if another owning process is specified this wrapper will wrap that instead\n   */\n  processRef = new WeakRef(globalThis?.process)\n\n  /**\n   * Instance of Writable to be wrapped.\n   */\n  streamRef = undefined\n\n  /**\n   * When creating a new custom Writable, it is stored here and referenced\n   * using the streamRef param.\n   */\n  #stream = undefined\n\n  /**\n   * When tapping the process.stdout in a way that takes it offline, it can\n   * be temporarily stored here as needed.\n   */\n  #strongStreamRef = undefined\n\n  constructor(stream, options) {\n    for (const eventName of [\n      ...StreamTap.kWritableStreamEvents,\n      ...StreamTap.kReadableStreamEvents,\n      ...StreamTap.kStreamTapEvents,\n    ]) {\n      if (!this.eventMap.has(eventName))\n        this.eventMap.set(eventName, [])\n    }\n\n    for (const [property, value] of Object.entries(EventEmitter.prototype)) {\n      if (String(property).startsWith('_'))\n        continue\n\n\n    }\n\n    if ([process.stdout, process.stderr].some(s => s === stream)) {\n      this.tapTTY(process, stream)\n    }\n\n    super(options)\n  }\n\n  _write(chunk, encoding, callback) {\n    this.buffer = Buffer.concat([this.buffer, chunk]);\n    callback();\n  }\n\n  #tapTTY(streamOwningProcess, streamToTap) {\n    this.streamRef = new WeakRef(streamToTap)\n    this.process = streamOwningProcess\n\n    for (const eventName of StreamTap.kWritableStreamEvents) {\n      streamToTap.on(eventName, function(event) {\n\n      })\n    }\n  }\n\n  static get TapMode() {\n    return {\n      Passthrough: StreamTap.kPassthrough,\n      Mirror: StreamTap.kMirror,\n      Proxy: StreamTap.kProxy,\n      get [Symbol.toStringTag]() { return 'Enum' },\n      get [Symbol.for('enum.name')]() { return 'TapMode' },\n    }\n  }\n\n  /**\n   * When a StreamTap is in Passthrough mode, all changes, event handler adds\n   * and so on, are applies to the tapped target only.\n   *\n   * @type {string}\n   */\n  static get kPassthrough() { return 'StreamTap Passthrough Mode' }\n\n  /**\n   * When a StreamTap is in Mirror mode, all changes are applied to both the\n   * tap and the underlying tapped target.\n   *\n   * @type {string}\n   */\n  static get kMirror() { return 'SteamTap Mirror Mode' }\n\n  /**\n   * When a StreamTap is in Proxy mode, all writes are sent to the StreamTap\n   * and all reads are received from both the tap and the target.\n   *\n   * @type {string}\n   */\n  static get kProxy() { return 'StreamTap Proxy Mode' }\n\n  /**\n   * This constant returns an array of the stream event names for\n   * Writable streams\n   *\n   * @type {string[]}\n   */\n  static get kWritableStreamEvents() {\n    return ['close', 'drain', 'error', 'finish', 'pipe', 'unpipe']\n  }\n\n  /**\n   * This constant returns an array of the stream event names for\n   * Readable streams\n   *\n   * @type {string[]}\n   */\n  static get kReadableStreamEvents() {\n    return ['close', 'data', 'end', 'error', 'pause', 'readable', 'resume']\n  }\n\n  /**\n   * This constant returns and array of the stream event names for\n   * StreamTap specific streams\n   *\n   * @type {string[]}\n   */\n  static get kStreamTapEvents() {\n    return ['_write', '_writeev', '_final']\n  }\n}\n\nexport function captureStdout(callback, args, thisArg) {\n  let captured = '';\n  const originalWrite = process.stdout.write;\n\n  if (typeof callback !== 'function') {\n    let newArgs = [callback]\n    if (thisArg) {\n      newArgs.push(thisArg)\n    }\n    newArgs = newArgs.concat(args)\n\n    callback = function () {\n      console.log(...newArgs)\n    }\n    thisArg = console\n    args = []\n  }\n\n  // Override process.stdout.write\n  process.stdout.write = (chunk, encoding, fd) => {\n    captured += chunk; // Append output to the string instead of printing it\n  };\n\n  try {\n    callback.apply(thisArg, args); // Call the function that would print to stdout\n  } finally {\n    // Restore the original process.stdout.write\n    process.stdout.write = originalWrite;\n  }\n\n  return captured.substring(0, captured.length - 1);\n}\n\nexport function Enum(name, values, properties) {\n  const enumeration = Object.create({}, {\n    [Symbol.toStringTag]: accessor('Enum', false, true, false),\n    [Symbol.for('Enum.name')]: accessor(name, false, true, false),\n    toString: data(function() {\n      return `Enum(${name})`\n    }, false, true, false)\n  })\n\n  if (!Array.isArray(values)) {\n    values = [values]\n  }\n\n  for (const value of values) {\n    const valueType = Array.isArray(value) ? 'array' : typeof value\n    let property = undefined\n    let response = undefined\n\n    let fromPrimitive = (value) => {\n      let valueType = typeof value\n\n      switch (valueType) {\n        case 'string':\n          case 'number':\n          case 'bigint':\n          case 'boolean':\n          default:\n            return [String(value), value]\n          case 'symbol':\n            return [value.description, value]\n          case 'function':\n            return [value.name, value]\n          case 'object': {\n            const str = as.string(value, {\n              description: true,\n              stringTag: true,\n            })\n            return [str, str]\n          }\n      }\n    }\n\n    switch (valueType) {\n      default:\n        ([property, response] = fromPrimitive(value))\n        break\n\n      case 'array': {\n        let elements = value\n        let storage = new Map()\n\n        if (value.length >= 1) {\n          ([property, response] = fromPrimitive(elements[0]))\n\n          let realValue = accessor(response, false, { storage, key: property })\n\n          let associatedKey = String(property) + '.associated'\n          let associatedOpts = { storage, key: associatedKey }\n          let associatedValue = value.length === 1\n            ? accessor(undefined, true, associatedOpts)\n            : accessor(value?.[1], value?.[2] ?? true, associatedOpts);\n\n          response = new Proxy(Object(property), {\n            get(target, _property, receiver) {\n              if (_property === 'value')\n                return associatedValue.get();\n\n              else\n                return realValue.get();\n            },\n            has(target, _property) {\n              return ['real', 'value'].includes(_property)\n            },\n            ownKeys(target) {\n              return ['real', 'value']\n            },\n            set(target, _property, value, receiver) {\n              if (_property === 'value')\n                return associatedValue.set(value);\n\n              return false\n            }\n          })\n        }\n      }\n    }\n\n    Object.defineProperty(enumeration, property, accessor(response, false))\n  }\n\n  if (properties) {\n    if (Array.isArray(properties)) {\n      const entries = properties.filter(e => Array.isArray(e) && e.length === 2)\n\n      if (entries.length)\n        properties = new Map(entries)\n      else\n        properties = {}\n    }\n\n    if (properties instanceof Map) {\n      const applyPropertiesOf = (object, baseDescriptor) => {\n        const property = {\n          configurable: baseDescriptor?.configurable ?? true,\n          enumerable: baseDescriptor?.enumerable ?? true,\n          writable: baseDescriptor?.writable ?? true,\n        }\n\n        for (const [key, subvalue] of Object.entries(object)) {\n          if ((stats = isDescriptor(subvalue)).isValid) {\n            if (stats.isAccessor || stats.isData)\n              Object.defineProperty(enumeration, key, subvalue)\n          }\n          else\n            Object.defineProperty(enumeration, key, data(subvalue, property))\n        }\n      }\n\n      let stats = {}\n\n      for (const [property, value] of properties.entries()) {\n        if (isDescriptor(property)) {\n          applyPropertiesOf(value, property)\n        }\n        else {\n          enumeration[property] = value\n        }\n      }\n    }\n    else if (typeof properties === 'object') {\n      applyPropertiesOf(value)\n    }\n  }\n\n  return enumeration\n}"],"mappings":"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","ignoreList":[]}