{"version":3,"file":"TypeScriptFlagMissingError.js","names":["_BaseError","_interopRequireDefault","require","e","__esModule","default","TypeScriptFlagMissingError","BaseError","constructor","path","message","defaultMessage","process","execArgv","join","flags","filter","flag","startsWith","toString","name","Array","isArray","exports","_default"],"sources":["../../src/errors/TypeScriptFlagMissingError.js"],"sourcesContent":["// @ts-check\n\nimport BaseError from './BaseError.js'\n\n/**\n * The InvalidPathError class represents an error that occurs when an invalid\n * path is provided to the `at` or `atNicely` functions. This error provides\n * details about the path that caused the error.\n */\nexport class TypeScriptFlagMissingError extends BaseError {\n  /**\n   * The path to the TypeScript file or files in question.\n   *\n   * @type {string|string[]}\n   */\n  path;\n\n  /**\n   * The executable arguments supplied to the running node.js process.\n   *\n   * @type {}\n   */\n  flags;\n\n  /**\n   * Given a path or paths to for which this error was thrown, it indicates\n   * that a dynamicImport() of files ending with a `.ts` extension was attempted\n   * but that this cannot be parsed at runtime due to this node process not\n   * having been started with the `--typescript` flag.\n   *\n   * @param {string|string[]} path the path or paths to the files in question\n   * @param {string?} message an optional message. If not supplied, it defaults\n   * to a message indicating you must run the node process with the\n   * `--typescript` flag supplied.\n   */\n  constructor(path, message) {\n    const defaultMessage = [\n      'Node was started without the `--typescript` flag. The flags supplied to',\n      `this node process were: ${process.execArgv}`\n    ].join(' ')\n\n    super(message || defaultMessage)\n\n    this.flags = process.execArgv.filter(flag => flag.startsWith('-'))\n    this.path = path\n  }\n\n  /**\n   * A friendly readable variant of this error message\n   *\n   * @returns {string}\n   */\n  toString() {\n    return (\n      `${this.constructor.name}: ${this.message} (path(s): ` +\n      `${Array.isArray(this.path) ? this.path.join(', ') : this.path}, ` +\n      `flags: ${this.flags})`\n    )\n  }\n}\n\nexport default TypeScriptFlagMissingError\n"],"mappings":";;;;;;AAEA,IAAAA,UAAA,GAAAC,sBAAA,CAAAC,OAAA;AAAsC,SAAAD,uBAAAE,CAAA,WAAAA,CAAA,IAAAA,CAAA,CAAAC,UAAA,GAAAD,CAAA,KAAAE,OAAA,EAAAF,CAAA;AAFtC;;AAIA;AACA;AACA;AACA;AACA;AACO,MAAMG,0BAA0B,SAASC,kBAAS,CAAC;EACxD;AACF;AACA;AACA;AACA;;EAGE;AACF;AACA;AACA;AACA;;EAGE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACEC,WAAWA,CAACC,IAAI,EAAEC,OAAO,EAAE;IACzB,MAAMC,cAAc,GAAG,CACrB,yEAAyE,EACzE,2BAA2BC,OAAO,CAACC,QAAQ,EAAE,CAC9C,CAACC,IAAI,CAAC,GAAG,CAAC;IAEX,KAAK,CAACJ,OAAO,IAAIC,cAAc,CAAC;IAEhC,IAAI,CAACI,KAAK,GAAGH,OAAO,CAACC,QAAQ,CAACG,MAAM,CAACC,IAAI,IAAIA,IAAI,CAACC,UAAU,CAAC,GAAG,CAAC,CAAC;IAClE,IAAI,CAACT,IAAI,GAAGA,IAAI;EAClB;;EAEA;AACF;AACA;AACA;AACA;EACEU,QAAQA,CAAA,EAAG;IACT,OACE,GAAG,IAAI,CAACX,WAAW,CAACY,IAAI,KAAK,IAAI,CAACV,OAAO,aAAa,GACtD,GAAGW,KAAK,CAACC,OAAO,CAAC,IAAI,CAACb,IAAI,CAAC,GAAG,IAAI,CAACA,IAAI,CAACK,IAAI,CAAC,IAAI,CAAC,GAAG,IAAI,CAACL,IAAI,IAAI,GAClE,UAAU,IAAI,CAACM,KAAK,GAAG;EAE3B;AACF;AAACQ,OAAA,CAAAjB,0BAAA,GAAAA,0BAAA;AAAA,IAAAkB,QAAA,GAAAD,OAAA,CAAAlB,OAAA,GAEcC,0BAA0B","ignoreList":[]}