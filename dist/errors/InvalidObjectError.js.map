{"version":3,"file":"InvalidObjectError.js","names":["_BaseError","_interopRequireDefault","require","e","__esModule","default","InvalidObjectError","BaseError","constructor","valueType","message","toString","name","exports","_default"],"sources":["../../src/errors/InvalidObjectError.js"],"sourcesContent":["// @ts-check\n\nimport BaseError from './BaseError.js';\n\n/**\n * The InvalidObjectError class represents an error that occurs when a non-object\n * value is provided as the target object to the `at` or `atNicely` functions.\n * This error provides details about the type of the value that caused the error.\n */\nexport class InvalidObjectError extends BaseError {\n  /** @type {string} */\n  valueType;\n\n  /**\n   * Creates a new `InvalidObjectError` instance.\n   *\n   * @param {string} valueType the type of object incorrectly received\n   * @param {string?} message an optional message instead of the default which\n   * indicates the type of value incorrectly received.\n   */\n  constructor(valueType, message) {\n    super(message || `Invalid object: Received type ${valueType}`);\n    this.valueType = valueType;\n  }\n\n  /**\n   * A nicely formatted variant of this error instance.\n   *\n   * @returns {string}\n   */\n  toString() {\n    return `${this.constructor.name}: ${this.message} (type: ${this.valueType})`;\n  }\n}\n\nexport default InvalidObjectError\n"],"mappings":";;;;;;AAEA,IAAAA,UAAA,GAAAC,sBAAA,CAAAC,OAAA;AAAuC,SAAAD,uBAAAE,CAAA,WAAAA,CAAA,IAAAA,CAAA,CAAAC,UAAA,GAAAD,CAAA,KAAAE,OAAA,EAAAF,CAAA;AAFvC;;AAIA;AACA;AACA;AACA;AACA;AACO,MAAMG,kBAAkB,SAASC,kBAAS,CAAC;EAChD;;EAGA;AACF;AACA;AACA;AACA;AACA;AACA;EACEC,WAAWA,CAACC,SAAS,EAAEC,OAAO,EAAE;IAC9B,KAAK,CAACA,OAAO,IAAI,iCAAiCD,SAAS,EAAE,CAAC;IAC9D,IAAI,CAACA,SAAS,GAAGA,SAAS;EAC5B;;EAEA;AACF;AACA;AACA;AACA;EACEE,QAAQA,CAAA,EAAG;IACT,OAAO,GAAG,IAAI,CAACH,WAAW,CAACI,IAAI,KAAK,IAAI,CAACF,OAAO,WAAW,IAAI,CAACD,SAAS,GAAG;EAC9E;AACF;AAACI,OAAA,CAAAP,kBAAA,GAAAA,kBAAA;AAAA,IAAAQ,QAAA,GAAAD,OAAA,CAAAR,OAAA,GAEcC,kBAAkB","ignoreList":[]}